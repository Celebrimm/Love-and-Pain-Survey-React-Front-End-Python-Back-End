{"version":3,"sources":["services/History.js","components/QuestionBox.js","components/SubmitButton.js","components/Title.js","components/Chart.js","components/ResultInfo.js","pages/Results.js","pages/LoveAndPain.js","pages/Pain.js","pages/Home.js","services/Routes.js","components/NavBar.js","App.js","reportWebVitals.js","index.js"],"names":["History","QuestionBox","question","answers","data","handle","thinkingOf","className","question_text","replace","map","answer","type","name","question_id","id","answer_text","value","answer_id","checked","onChange","SubmitButton","handleSubmit","onSubmit","Title","props","state","welcomeText","this","class","React","Component","Chart","ResponsiveContainer","width","height","BarChart","margin","top","right","left","bottom","barSize","XAxis","dataKey","scale","padding","YAxis","Tooltip","Legend","CartesianGrid","strokeDasharray","Bar","fill","background","ResultInfo","Results","fetchResults","fetch","then","res","json","result","setState","LoveAndPain","handleChange","e","target","parseInt","toLowerCase","questionsAndanswers","bind","Object","keys","length","alert","event","preventDefault","allowSubmit","method","headers","Accept","body","JSON","stringify","answer_ids","r","push","onClick","Pain","Home","Button","Routes","history","exact","path","render","to","component","withRouter","console","log","bg","variant","Collapse","Nav","Link","href","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fb7759f9.chunk.js","sourcesContent":["import { createBrowserHistory as History } from \"history\";\r\n\r\nexport default History();\r\n","import React from \"react\";\r\n\r\nconst QuestionBox = ({ question, answers, data, handle, thinkingOf }) => {\r\n  return (\r\n    <div className=\"questionBox\">\r\n      <li key={question.question_id}>\r\n        <div className=\"question\">\r\n          {question.question_text.replace(\"______\", thinkingOf)}\r\n        </div>\r\n\r\n        {answers.map((answer) => (\r\n          <li key={answer.answer_id}>\r\n            <form>\r\n              <div>\r\n                <label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name={question.question_id}\r\n                    id={answer.answer_text}\r\n                    value={answer.answer_id}\r\n                    checked={data[question.question_id] === answer.answer_id}\r\n                    onChange={handle}\r\n                  />\r\n                  {answer.answer_text}\r\n                </label>\r\n              </div>\r\n            </form>\r\n          </li>\r\n        ))}\r\n      </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionBox;\r\n","import React from \"react\";\r\n\r\nconst SubmitButton = ({ handleSubmit }) => {\r\n  return (\r\n    <div className=\"subbtn\">\r\n      <form onSubmit={handleSubmit}>\r\n        <button className=\"subbtn\" type=\"submit\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubmitButton;\r\n","import React from \"react\";\r\n\r\nclass Title extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { welcomeText: props.welcomeText };\r\n  }\r\n\r\n  render() {\r\n    if (this.state.welcomeText === false)\r\n      return (\r\n        <>\r\n          <div class=\"font-effect-fire-animation\">\r\n            <h1 className=\"title\"> Pain Survey</h1>\r\n          </div>\r\n          <h2 className=\"info\">\r\n            Welcome! You have been chosen to participate in an survey\r\n            experiment. Thank you for your participation!\r\n          </h2>\r\n        </>\r\n      );\r\n    else if (this.state.welcomeText === true)\r\n      return (\r\n        <>\r\n          <div class=\"font-effect-fire-animation\">\r\n            <h1 className=\"title\">Love and Pain Survey</h1>\r\n          </div>\r\n          <h2 className=\"info\">\r\n            Welcome! You have been chosen to participate in an survey\r\n            experiment. From questions two to fifteen, answer choices range from\r\n            (1) Not at all true to (9) Definitely true. Thank you for your\r\n            participation!\r\n          </h2>\r\n        </>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\nconst Chart = ({ data }) => {\r\n  return (\r\n    <ResponsiveContainer className=\"App\" width={400} height={400}>\r\n      <BarChart\r\n        className=\"App\"\r\n        width={225}\r\n        height={300}\r\n        data={data}\r\n        margin={{\r\n          top: 5,\r\n          right: 30,\r\n          left: 20,\r\n          bottom: 5,\r\n        }}\r\n        barSize={30}\r\n      >\r\n        <XAxis\r\n          dataKey=\"version\"\r\n          scale=\"point\"\r\n          padding={{ left: 10, right: 10 }}\r\n        />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Legend />\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <Bar dataKey=\"average\" fill=\"#8884d8\" background={{ fill: \"#eee\" }} />\r\n      </BarChart>\r\n    </ResponsiveContainer>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nfunction ResultInfo() {\r\n  return (\r\n    <h2>\r\n      The purpose of this experiment is to see if people who take the love\r\n      questions before the pain questions (Version: Love and Pain) are going to\r\n      answer more prudently when answering questions in the pain portion of the\r\n      survey as opposed to the people who just took the pain questions(Version:\r\n      Pain).It is believed that when people are made to think about a loved one\r\n      before being asked questions about how they would react in painful\r\n      situations, that they would answer the pain questions more prudently.\r\n      Therefore the first portion of the version \"Love and Pain\" is dedicated to\r\n      asking you questions about your loved one. The answer values that are\r\n      being evaluated(pain portion of the survey) are based on a level of\r\n      caution scale. Most Likely being the highest level of caution(5) and Very\r\n      unlikely being the lowest level of caution(1) with the exception of the\r\n      last two questions. The last two questions are taking the opposite values.\r\n      Every participants average level of caution and their respective version\r\n      were then taken and added to a pool of other participants results. The\r\n      overall result for each version posted on the graph above was given by the\r\n      average of each versions pool of results.\r\n    </h2>\r\n  );\r\n}\r\nexport default ResultInfo;\r\n","import React from \"react\";\r\nimport Chart from \"../components/Chart\";\r\nimport ResultInfo from \"../components/ResultInfo\";\r\n\r\nclass Results extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: {},\r\n    };\r\n  }\r\n  fetchResults = () => {\r\n    fetch(\"http://127.0.0.1:5000/results\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          data: result,\r\n        });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"http://127.0.0.1:5000/get_results\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          data: result,\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"result-info\">\r\n        <Chart data={this.state.data}></Chart>\r\n        <ResultInfo />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\nimport QuestionBox from \"../components/QuestionBox\";\r\nimport SubmitButton from \"../components/SubmitButton\";\r\nimport Title from \"../components/Title\";\r\nimport History from \"../services/History\";\r\nimport Results from \"../pages/Results.js\";\r\nclass LoveAndPain extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questionsAndanswers: [],\r\n      thinkingOf: \"______\",\r\n      data: {},\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://127.0.0.1:5000/questionnaire\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          questionsAndanswers: result,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      data: { ...this.state.data, [name]: parseInt(value) },\r\n    });\r\n\r\n    if (e.target.name === \"0\" && e.target.id !== \"I have never been in love.\") {\r\n      this.setState({\r\n        thinkingOf: e.target.id\r\n          .toLowerCase()\r\n          .replace(\".\", \"\")\r\n          .replace(\"i\", \"I\"),\r\n      });\r\n    }\r\n    if (e.target.name === \"0\" && e.target.id === \"I have never been in love.\") {\r\n      this.setState({ thinkingOf: \"someone important to me\" });\r\n    }\r\n  };\r\n\r\n  allowSubmit() {\r\n    if (\r\n      Object.keys(this.state.data).length ===\r\n      Object.keys(this.state.questionsAndanswers).length\r\n    ) {\r\n      return true;\r\n    } else {\r\n      alert(\"Please answer all the questions before submitting\");\r\n    }\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.allowSubmit()) {\r\n      fetch(\"http://127.0.0.1:5000/results \", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ answer_ids: this.state.data }),\r\n      })\r\n        .then((r) => r.json())\r\n        .then((res) => {\r\n          if (res) {\r\n            History.push(\"/results\");\r\n          }\r\n        });\r\n      this.setState({ data: {} });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"container\">\r\n        <div>\r\n          <Title welcomeText={true} />\r\n          <ul className=\"ulremovebullets\">\r\n            {this.state.questionsAndanswers.map(({ question, answers }) => (\r\n              <QuestionBox\r\n                question={question}\r\n                answers={answers}\r\n                data={this.state.data}\r\n                handle={this.handleChange}\r\n                thinkingOf={this.state.thinkingOf}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <SubmitButton\r\n            handleSubmit={this.handleSubmit}\r\n            onClick={Results.fetchResults}\r\n          />\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoveAndPain;\r\n","import React from \"react\";\r\nimport QuestionBox from \"../components/QuestionBox\";\r\nimport SubmitButton from \"../components/SubmitButton\";\r\nimport Title from \"../components/Title\";\r\nimport History from \"../services/History\";\r\n\r\nclass Pain extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { questionsAndanswers: [], data: {} };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"http://127.0.0.1:5000/pain\")\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        this.setState({\r\n          questionsAndanswers: result,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      data: { ...this.state.data, [name]: parseInt(value) },\r\n    });\r\n  };\r\n\r\n  allowSubmit() {\r\n    if (\r\n      Object.keys(this.state.data).length ===\r\n      Object.keys(this.state.questionsAndanswers).length\r\n    ) {\r\n      return true;\r\n    } else {\r\n      alert(\"Please answer all the questions before submitting\");\r\n    }\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.allowSubmit()) {\r\n      fetch(\"http://127.0.0.1:5000/results \", {\r\n        method: \"POST\",\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ answer_ids: this.state.data }),\r\n      })\r\n        .then((r) => r.json())\r\n        .then((res) => {\r\n          if (res) {\r\n            History.push(\"/results\");\r\n          }\r\n        });\r\n      this.setState({ data: {} });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // const { questionsAndanswers } = this.state;\r\n\r\n    return (\r\n      <header className=\"container\">\r\n        <div>\r\n          <Title welcomeText={false} />\r\n          <ul className=\"ulremovebullets\">\r\n            {this.state.questionsAndanswers.map(({ question, answers }) => (\r\n              <QuestionBox\r\n                question={question}\r\n                answers={answers}\r\n                data={this.state.data}\r\n                handle={this.handleChange}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <SubmitButton handleSubmit={this.handleSubmit} />\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pain;\r\n","import React from \"react\";\r\nimport History from \"../services/History\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport \"./Home.css\";\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"title\">\r\n          <h1>Welcome!</h1>\r\n          <p>Choose Your Survey!</p>\r\n          <form>\r\n            <Button\r\n              className=\"homesurveychoicebtn\"\r\n              onClick={() => History.push(\"/pain\")}\r\n            >\r\n              Pain\r\n            </Button>\r\n          </form>\r\n          <form>\r\n            <Button\r\n              className=\"homesurveychoicebtn\"\r\n              onClick={() => History.push(\"/love-and-pain\")}\r\n            >\r\n              Love and Pain\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport History from \"../services/History\";\r\nimport { Router, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport LoveAndPain from \"../pages/LoveAndPain.js\";\r\nimport Pain from \"../pages/Pain.js\";\r\nimport Home from \"../pages/Home\";\r\nimport Results from \"../pages/Results.js\";\r\n\r\nexport default class Routes extends Component {\r\n  render() {\r\n    return (\r\n      <Router history={History}>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return <Redirect to=\"/home\" />;\r\n            }}\r\n          />\r\n          <Route path=\"/home\" component={Home} exact />\r\n          <Route path=\"/pain\" component={Pain} exact />\r\n          <Route path=\"/love-and-pain\" component={LoveAndPain} exact />\r\n          <Route path=\"/results\" component={Results} exact />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Navigation = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <Navbar bg=\"primary\" variant=\"dark\" className=\"Navcontainer\">\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav>\r\n          <Nav.Link className=\"Navbtn\" href=\"/home\">\r\n            Home\r\n          </Nav.Link>\r\n          <Nav.Link className=\"Navbtn\" href=\"/pain\">\r\n            Pain\r\n          </Nav.Link>\r\n          <Nav.Link className=\"Navbtn\" href=\"/love-and-pain\">\r\n            Love and Pain\r\n          </Nav.Link>\r\n          <Nav.Link className=\"Navbtn\" href=\"/results\">\r\n            Results\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navigation);\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Routes from \"./services/Routes\";\nimport Navigation from \"./components/NavBar.js\";\nimport \"./index.css\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Navigation />\n\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}